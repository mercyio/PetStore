deployment url: https://petstore-api.onrender.com
deployment url :  https://pet-store-api-cbxj.onrender.com


docker login
docker pull mysql
docker run -e MySQL_PASSWORD=mysecretpassword -d mysql
docker run -it mysql /bin/bash
or
docker run --name some-mysql -p 5432:5432 -e MySQL_PASSWORD=mysecretpassword -d mysql:latest
docker-compose config
docker-compose up --build
docker pc
docker inpect 


docker build -t nestjs-docker . 
docker run -p 7000:7000 nestjs-docker
or for production
docker build -t nestjs-prod -f Dockerfile.prod .
docker run -p 7000:7000 nestjs-prod
then
docker-compose up --build
To targrt a particular docker-compose file:
docker-compose.prod.yml up --build
docker-compose -f docker-compose.yml up --build -d


docker run (image name) 
 docker run -e POSTGRES_PASSWORD=password d957f100ceec

  You may also use "POSTGRES_HOST_AUTH_METHOD=trust" to allow all
  connections without a password. This is *not* recommended.
  docker run -e POSTGRES_HOST_AUTH_METHOD=trust d957f100ceec




"IPAddress": "172.19.0.3",
clever cloudb

npm install @nestjs/typeorm typeorm mysql2
npm i dotenv




    "typeorm": "npm run build && npx typeorm -d dist/config/typeorm.js",
    "migration:generate": "npm run typeorm -- migration:generate",
    "migration:run": "npm run typeorm -- migration:run",
    "migration:revert": "npm run typeorm -- migration:revert"


    npm run migration:generate -- config/migrations/testingFiles